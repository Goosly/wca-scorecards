{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar result_1 = require(\"./result\");\nfunction Ao5(results) {\n  results = results.filter(function (r) {\n    return r !== 0;\n  });\n  if (results.some(result_1.isMultiResult)) return null; // cannot calculate average or mean for MBLD\n  if (results.length !== 5) return null;\n  if (results.filter(function (r) {\n    return r < 0;\n  }).length > 1) {\n    // can have at most 1 DNF or DNS for Ao5\n    return -1;\n  }\n  var comparableResults = results.map(function (result) {\n    var r = parseInt(\"\" + result, 10);\n    if (r === -1) return Number.MAX_VALUE - 2; // normalize DNS and DNF to high numbers, so we can treat them as normal results, while\n    if (r === -2) return Number.MAX_VALUE - 1; // keeping DNF better than DNS\n    return r;\n  });\n  var best = Math.min.apply(Math, comparableResults);\n  var worst = Math.max.apply(Math, comparableResults);\n  delete comparableResults[comparableResults.indexOf(best)];\n  delete comparableResults[comparableResults.indexOf(worst)];\n  var avg = Math.round(comparableResults.reduce(function (a, b) {\n    return parseInt(\"\" + a, 10) + parseInt(\"\" + b, 10);\n  }, 0) / 3);\n  if (avg > 60000) {\n    avg = Math.round(avg / 100) * 100;\n  }\n  return avg;\n}\nexports.Ao5 = Ao5;\nfunction Mo3(results) {\n  results = results.filter(function (r) {\n    return r !== 0;\n  }); // remove non-existing attempts\n  if (results.some(result_1.isMultiResult)) return null; // cannot calculate average or mean for MBLD\n  if (results.length !== 3) return null;\n  if (results.filter(function (r) {\n    return r < 0;\n  }).length > 0) {\n    // we have at least 1 DNF or DNS, so mean is DNF by default\n    return -1;\n  }\n  var avg = Math.round(results.reduce(function (a, b) {\n    return parseInt(\"\" + a, 10) + parseInt(\"\" + b, 10);\n  }, 0) / 3);\n  if (avg > 60000) {\n    avg = Math.round(avg / 100) * 100;\n  }\n  return avg;\n}\nexports.Mo3 = Mo3;\n//# sourceMappingURL=average.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}